import React,{useState, useEffect} from 'react'
import {Loader,  Form} from '../components/index';
const RenderCards = ({data,name, title})=>{
  if(data?.length >0){ 
    return data.map((post)=><Card key = {post.id} {...post} />)
 }
 return (
  <h2 className='mt-5 font-bold text-[#6469ff] uppercase'>{title}</h2>
 )
}
 const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setallPosts] = useState(null);
  const [SerchText, setSerchText] = useState('');
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);
 
  const fetchPosts = async () => {
    setLoading(true);

    try {
      const response = await fetch('http://localhost:8080/api/v1/post',{
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      }
    } catch (err) {
      alert(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);
  

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResult);
      }, 500),
    );
  };






  return (
    <section className='max-w-7xl mx-auto' >
     <div>
     <h1 className='font-extrabold text-[#222328] text-[32px]'>
        The community showcase
      </h1>
      <p className='"mt-2 text-[#666e75] text-[14px] max-w-[500px]' >
        Browse through a collection of imagination and visually stunning images generated by VisionAI
      </p>
     </div>
     <div className='mt-16'>
      <Form 
       labelName="Search posts"
       type="text"
       name="text"
       placeholder="Search something..."
       value={SerchText}
       handleChange={handleSearchChange}
      />
     </div>
     <div className='mt-16'>
      {loading ? (<div className='flex justify-center items-center'>
      <Loader />
      </div>): (<>
      {SerchText && (
        <h2 className='font-medium text-[#666e75] text-xl mb-36'>Showing results for:
          <span className='text-[#222328]'>{SerchText}</span>
        </h2>
      )}
      <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
       {SerchText ? (
        <RenderCards
        data={searchedResults}
        title="No serch result"
        />
       ): (
        <RenderCards
        data={[]}
        title="No Post found"
        />
       )}
      </div>
      </>)}
     </div>
    </section>
  )
}

export default Home